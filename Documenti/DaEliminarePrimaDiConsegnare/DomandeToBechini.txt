// --- RIEPILOGO, SALTALO PURE SE TI RICORDI IL CONTESTO --- //

Il programma è pensato per essere utilizzato all'interno di un'azienda, che vuole che più pc possano accedere 
ad alcuni file, e vuole che questi file siano memorizzati in modo distribuito fra i nodi che utilizzano l'applicazione.
Avremo quindi che in generale di giorno tutti i computer che utilizzano l'applicazione saranno accesi (anche solo perchè
vengono utilizzati dai dipendenti dell'azienda), anche se ogni tanto potranno venir spenti per farci manutenzione o 
per altri motivi, mentre di notte vengono spenti tutti tranne un numero ristretto (2-3) di computer,
che fungono da seed nodes, ovvero devono stare sempre accesi affinchè la nostra applicazione possa funzionare (l'idea
è che staranno accesi anche di notte per motivi dell'azienda, e noi ne approfittiamo per utilizzarli come seed nodes.)

Abbiamo dunque dei seed nodes che stanno sempre accesi, e altri che ingenerale stanno accesi di giorno, 
anche se in circostanze particolari possono spegnersi.

// --- FINE RIEPILOGO --- //

I vari sentieri che ha percorso la mia mente:
1) se ricordate, la mia proposta era, per evitare che ogni notte il carico andasse tutto ai seed nodes, con la 
conseguenza che giorno dopo giorno il carico su di loro sarebbe andato sempre aumentando, mentre gli altri nodi ogni
giorno ne "prendevano in carico" solo una parte, con conseguenza sbilanciamento del carico fra seed nodes e nodi normali,
di fare che la filosofia è: "è una applicazione distribuita, quindi per funzionare ha bisogno di quanti più pc accesi possibile".
Pertanto sono presenti 2 diversi "modi" in cui si può uscire dall'applicazione: uscita normale, cioè per la notte,
che fa sì che i file rimangano sulla macchina, e siano quindi disponibili sulla stessa il giorno dopo, oppure "uscita completa dal cluster",
che si fa quando si vuole che una macchina non partecipi più a questa applicazione distribuita. In tal caso, all'uscita, si ridistribuiscono
i suoi file

2) Mi è poi venuto il dubbio: deh, ma se li facciamo stare sempre (di giorno) accesi, allora è come se fossero tutti seed nodes!
Magari si può ipotizzare che i file siano più o meno quelli, che il loro numero non aumenti a dismisura, e che quindi
sia sufficiente la "ridistribuzione" che avviene durante il giorno quando chiedono un file in modifica. Anzi, per essere sicuri
che avvenga la ridistribuzione, potremmo fare che quando un nodo arriva, riceve qualche file, magari dal nodo con più carico.
Unica cosa, bisogna far sì che i seed nodes abbiano abbastanza spazio per poter, di notte, memorizzare tutti i files del cluster.

3) Poi però ho pensato: deh, ma dal momento che i seed nodes hanno abbastanza memoria per memorizzare tutti i files del cluster
(come avviene di notte), che bisogno c'è di ridistribuirli? tanto vale che i file stiano lì permanentemente e vengano acceduti da lì! 

4) Infine...rimango della mia idea. Potremmo pensare che alcuni impiegati siano impegnati in un progetto, che richiede
di lavorare con molti file e vogliono che il carico sia equamente distribuito fra i loro pc. Allora dicono "usiamo akka file sharing!",
designano alcuni di loro come seed nodes, e poi lanciano l'applicazione su tutte le macchine. Ogni giorno questi impiegati,
che vorranno usare il pc per lavorare al progetto, accenderanno i loro pc, accendendo prima i seed nodes, e i file saranno ancora lì,
distribuiti come lo erano la sera prima. Quindi sottolineo che spegnerei i seed nodes di notte.
Quindi in questo caso avverrebbe che, finchè gli impiegati lavorano al progetto, 
i file restano sul pc anche dopo lo spegnimento dell'applicazione e del pc. 
Sottolineo che in questo modo nessun pc sarebbe costretto a restare SEMPRE acceso.
Quando poi il progetto è terminato, gli impiegati possono ad esempio cancellare tutti i file che non servono più (o semplicemente
escluderli dall'applicazione), lasciare solo quelli "da consegnare", e uscire tutti tranne 1 dal cluster
(non solo uscita dall'applicazione, uscita dal cluster nel senso che non mi interessa più stare in quel cluster),
in modo che piano piano i file rimasti vadano sul nodo rimanente, che può essere ad esempio il capoprogetto che avrà poi il compito
di consegnare i file a chi di dovere. 


Riguardo alle obiezioni rivolte da Nicola, che probabilmente ha ragione ma io non glielo dò a vedere:
1) se è gente in tutto il mondo...allora occorrerebbe anche la sicurezza, per scambiare dati? 
o ci penserà già tcp?
2) io pensavo comunque che in un determinato momento potesse accedere che rimangono diciamo solo 2 pc attivi.
A quel punto, se ad es ogni pc ha 1GB dedicato all'applicazione, e ci sono 100 PC, i due nodi che rimangono attivi,
per poter ricevere tutti i file, dovranno sopportare un carico di 50GB l'uno. Quindi viene sforato abbondantemente il
limite, e non è detto che abbiano tutto questo spazio disponibile.

Comunque vabè, in effetti è ganzo pensare la cosa del cluster tipo bit-torrent, che si forma "a posta" per uno scopo,
e poi si "scioglie" quando non c'è più bisogno, e i file vengono mano a mano spostati sui pc che sono attivi in quella
fascia oraria. Quest'ultima cosa la trovo molto ganza! xD




FIN QUA
----------------------------------------------------------------------------------------------------------------

Il programma è pensato per essere utilizzato all'interno di un'azienda, che vuole che più pc possano accedere 
ad alcuni file, e vuole che questi file siano memorizzati in modo distribuito fra i nodi che utilizzano l'applicazione.
Avremo quindi che in generale di giorno tutti i computer che utilizzano l'applicazione saranno accesi (anche solo perchè
vengono utilizzati dai dipendenti dell'azienda), anche se ogni tanto potranno venir spenti per farci manutenzione o 
per altri motivi, mentre di notte vengono spenti tutti tranne un numero ristretto (2-3) di computer,
che fungono da seed nodes, ovvero devono stare sempre accesi affinchè la nostra applicazione possa funzionare (l'idea
è che staranno accesi anche di notte per motivi dell'azienda, e noi ne approfittiamo per utilizzarli come seed nodes.)

Abbiamo dunque dei seed nodes che stanno sempre accesi, e altri che ingenerale stanno accesi di giorno, 
anche se in circostanze particolari possono spegnersi.

1) Per come abbiamo fatto il progetto ora, esso prevede che, quando un nodo abbandona il cluster (cioè esce dall'applicazione),
esso invia ai nodi rimasti i suoi file, usando una politica di load balancing.

Di conseguenza, se partiamo da un giorno 1 in cui si forma per la prima volta il cluster, i file saranno distribuiti 
equamente fra i vari pc. Giunta la prima notte, i nodi uno dopo l'altro abbandoneranno il cluster, e una volta che tutti tranne
i seed nodes se ne saranno andati,  

2) il problema della sincronizzazione fra i file che richiedo e quello che qualcuno mi può inviare nel frattempo tramite
load balacing. Va fatta o no?


